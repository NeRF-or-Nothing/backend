services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - backend

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      # AMQP protocol port
      - "5672:5672"
      # HTTP management UI
      - "15672:15672"
    networks:
      - backend

  go-web-server:
    build:
      context: ./GoWebServer
      dockerfile: ./Dockerfile
    image: gowebserver-img
    container_name: go-web-server
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      APP_PORT: 5000
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_IP: mongodb
      JWT_SECRET: ${JWT_SECRET_KEY}
    ports:
      - "5000:5000"
    networks:
      - backend

networks:
  backend:
    name: backend-network
    driver: bridge

volumes:
  mongodb_data_container:
  ssl-certs: